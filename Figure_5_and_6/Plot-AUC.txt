#######set directory
setwd('D:\\Data for R\\Other works\\IDA THAI')
#######Load package
library(RWeka)
library(caret)
library(randomForest)
library(kernlab)
library(e1071)
library(corrplot)
library(C50)
library(nnet)
library(GA)
library(cvTools) 
library(Metrics)
library(MASS)
library(pls)
library(AUC)
library(ROCR)


internal = read.csv("IDA-TT-analysis.csv", header = TRUE)
external = read.csv("Independent-data.csv", header = TRUE)


################Decision tree
DTcv = read.csv("DT_auc_cv plot.csv", header = TRUE)
pred.dtcv  <- prediction(DTcv[,1:100], DTcv[,101:200])
perf.dtcv <- performance(pred.dtcv, 'tpr', 'fpr')

DText = read.csv("DT_auc_ext plot.csv", header = TRUE)
pred.dtext  <- prediction(DText[,1:100], DText[,101:200])
perf.dtext <- performance(pred.dtext, 'tpr', 'fpr')

DT= C5.0(x =internal[, -ncol(internal)], y = internal$Dx)
predictions=predict(DT, external,type = "prob")
pred=prediction(predictions[,2],external[,ncol(external)])
perf.dtind <- performance(pred, 'tpr', 'fpr')

################Random forest
RFcv = read.csv("RF_auc_cv plot.csv", header = TRUE)
pred.rfcv  <- prediction(RFcv[,1:100], RFcv[,101:200])
perf.rfcv <- performance(pred.rfcv, 'tpr', 'fpr')

RFext = read.csv("RF_auc_ext plot.csv", header = TRUE)
pred.rfext  <- prediction(RFext[,1:100], RFext[,101:200])
perf.rfext <- performance(pred.rfext, 'tpr', 'fpr')

model <- tuneRF(internal[,-ncol(internal)], internal[,ncol(internal)], stepFactor=1.5)
index <- c(100,200,300,400,500,600,700,800,900,1000)
for(p in 1:10){
ntree <- randomForest(Dx  ~ ., internal, ntree= index[p],mtry = model[order(model[,2]),][1],orm.votes=TRUE,keep.forest=TRUE, importance=TRUE)
error[p,] <- sum(ntree $ confusion[,3])
}
ntr = cbind(c(1:10),error)
ntr2 = ntr[order(ntr[,2]),][1]

RF = randomForest(Dx ~ ., internal, ntree= index[ntr2],mtry = model[order(model[,2]),][1],orm.votes=TRUE,keep.forest=TRUE, importance=TRUE) ## Building RF on internal with the optimized parameter
predictions=predict(RF, external,type = "prob")
pred=prediction(predictions[,2],external[,ncol(external)])
perf.rfind <- performance(pred, 'tpr', 'fpr')

################Support Vector Machine
SVMcv = read.csv("SVM_auc_cv plot.csv", header = TRUE)
pred.svmcv  <- prediction(SVMcv[,1:100], SVMcv[,101:200])
perf.svmcv <- performance(pred.svmcv, 'tpr', 'fpr')

SVMext = read.csv("SVM_auc_ext plot.csv", header = TRUE)
pred.svmext  <- prediction(SVMext[,1:100], SVMext[,101:200])
perf.svmext <- performance(pred.svmext, 'tpr', 'fpr')

SVMpara = tune(svm, Dx ~ ., data =internal, ranges =list(gamma = 2^(-8:8), cost = 2^(-8:8)),
tunecontrol = tune.control(sampling = "fix"))

RF =ksvm(Dx ~ ., internal,kernel="rbfdot", cost = as.numeric(SVMpara$ best.parameters[1]),
gamma = as.numeric(SVMpara$ best.parameters[1]),prob.model=TRUE) ## Building RF on internal with the optimized parameter
predictions=predict(RF, external,type= "probabilities")
pred=prediction(predictions[,2],external[,ncol(external)])
perf.svmind <- performance(pred, 'tpr', 'fpr')

#########Plot roc curve
par( mfrow = c(1,3 ),mai=c(0.7,0.7,0.3,0.3))

plot(perf.dtcv, avg="vertical", lwd=3, col="green",
spread.estimate="stderror",plotCI.lwd=3, xlab = "False positive rate", ylab= "True positive rate",cex.lab=1.5)
lines(x = c(0,100), y = c(0,100))
plot(perf.rfcv, avg="vertical", lwd=3, col="blue",
spread.estimate="stderror",plotCI.lwd=3,add=TRUE)
plot(perf.svmcv, avg="vertical", lwd=3, col="red",
spread.estimate="stderror",plotCI.lwd=3,add=TRUE)

plot(perf.dtext, avg="vertical", lwd=3, col="green",
spread.estimate="stderror",plotCI.lwd=3, xlab = "False positive rate", ylab= ".",cex.lab=1.5)
lines(x = c(0,100), y = c(0,100))
plot(perf.rfext, avg="vertical", lwd=3, col="blue",
spread.estimate="stderror",plotCI.lwd=3,add=TRUE)
plot(perf.svmext, avg="vertical", lwd=3, col="red",
spread.estimate="stderror",plotCI.lwd=3,add=TRUE)


plot(perf.dtind, avg="vertical", lwd=3, col="green",
spread.estimate="stderror",plotCI.lwd=3, xlab = "False positive rate", ylab= ".",,cex.lab=1.5)
lines(x = c(0,100), y = c(0,100))
plot(perf.rfind, avg="vertical", lwd=3, col="blue",
spread.estimate="stderror",plotCI.lwd=3,add=TRUE)
plot(perf.svmind, avg="vertical", lwd=3, col="red",
spread.estimate="stderror",plotCI.lwd=3,add=TRUE)

legend("bottomright",c('DT','RF','SVM'),col=c('green','blue','red'),lwd=5,cex=1.3, pch=1, pt.cex = 1)
